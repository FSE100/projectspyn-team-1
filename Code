brick = ConnectBrick('EV1');
int rightdistance;
int leftdsitance;
while 1
    brick.MoveMotor('AB', 50);
    brick.SetColorMode(2, 2);   % Set Color Sensor connected to Port 1 to Color Code Mode
    color = brick.ColorCode(2);  % Get Color on port 1.
    %display(color);                % Print color code of object.
    distance = brick.UltrasonicDist(1);% Get distance to the nearest object.
    display(distance);                   % Print distance.
    
    %if sees red
    if (color == 5 ) %red
     brick.StopMotor('AB', 'Brake');
     pause(4);
     brick.MoveMotor('AB', 50)
     pause(1);
    end
    
    %dropoff zone
    if (color == 3) %green
        brick.MoveMotor('AB', 30)
        pause(1);
        bric.StopMotor('AB', 'Brake');
        brick.MoveMotorAngleRel('A', 40, 30, 'Coast');
        brick.MoveMotor('C', -20); %Move Down
    end
    
    %blue, pickup
    if (color == 2) %blue
        InitKeyboard();
        while 1
            pause(0.1);
                switch key
                    case 'uparrow'
                        brick.MoveMotor('AB', 50);         
                    case 'downarrow'    
                        brick.MoveMotor('AB', -40);
                    case 'rightarrow'
                        brick.MoveMotorAngleRel('A', 40, 30, 'Coast');
                    case 'leftarrow'
                        brick.MoveMotorAngleRel('B', 40, 240, 'Coast');
                    case 'space'
                        brick.StopMotor('AB', 'Brake');
                    case 'c'
                        brick.MoveMotor('C', 20); %crane
                    case 's'
                        brick.MoveMotor('C', -20); %crane move down
                    case 'x'
                        brick.StopMotor('C', 'Brake');
                    case 'q'
                        break;
                end
        end
    end
    
    
    %wall, turning
    if (distance == 33.02)
     brick.StopMotor('AB', 'Brake');
     pause(1);
     brick.MoveMotorAngleRel('A', 40, 30, 'Coast');
     distance = brick.UltrasonicDist(1);
     rightdistance = distance;
     brick.MoveMotorAngleRel('A', 40, 240, 'Coast');
     distance = brick.UltrasonicDist(1);
     leftdistance = distance;
        if ( leftdistance>rightdistance)
            brick.MoveMotor('AB', 50);
        end
        if ( rightdance>leftdistance)
            brick.MoveMotorAngleRel('A', 40, 30, 'Coast');
        end
    end
    
 
    
    
    
    
   
    
    
        
end
